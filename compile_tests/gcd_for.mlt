let rec fact n =
  if n = 0 then 1 else n * fact (n - 1)

let fib n =
  let rec aux n a b =
    if n = 0 then a else aux (n - 1) b (a + b)
  in
  aux n 0 1

let rec gcd_rec m n =
  match n with
  | 0 -> m
  | _ -> gcd_rec n (m mod n)

let rec for_gcd n =
  let _ = gcd_rec (fib 10) (fact 10) in
  if n = 1 then (gcd_rec (fib 10) (fact 10)) else for_gcd (n-1)

run 
  for_gcd 1000