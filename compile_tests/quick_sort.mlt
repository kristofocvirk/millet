let rec partition x ls =
  let rec aux x ls ls1 ls2 = 
    match ls with 
    | [] -> (ls1, ls2)
    | hd :: tl -> 
    if hd < x then
      aux x tl (hd :: ls1) ls2
    else 
      aux x tl ls1 (hd :: ls2)
  in 
  aux x ls [] []


let rec quicksort = function
    | [] -> []
    | x::xs -> let smaller, larger = partition x xs
               in quicksort smaller @ (x::quicksort larger)

let random_int_list = [138; 722; 533; 820; 886; 916; 931; 234; 829; 444; 822; 904; 726; 405; 920; 925; 350; 96; 298; 112; 124; 21; 760; 707; 788; 341; 203; 468; 916; 718; 479; 366; 695; 358; 956; 687; 3; 301; 140; 335; 523; 840; 657; 457; 914; 361; 945; 743; 12; 556; 957; 574; 934; 673; 441; 786; 637; 371; 409; 231; 522; 767; 227; 178; 945; 333; 614; 160; 614; 276; 457; 856; 529; 756; 282; 73; 555; 593; 708; 454; 525; 317; 839; 390; 383; 303; 830; 298; 232; 20; 839; 372; 138; 140; 238; 534; 577; 524; 824; 573; 75; 186; 94; 164; 883; 716; 465; 484; 252; 535; 452; 645; 201; 891; 474; 803; 593; 348; 898; 152; 914; 260; 349; 188; 778; 596; 909; 109; 284; 317; 950; 965; 508; 291; 35; 589; 419; 453; 835; 701; 917; 117; 679; 168; 794; 435; 751; 775; 932; 780; 737; 682; 46; 971; 537; 122; 317; 965; 117; 235; 940; 985; 209; 262; 245; 371; 502; 487; 782; 766; 206; 160; 745; 139; 934; 162; 228; 797; 934; 287; 201; 962; 700; 782; 900; 485; 99; 180; 829; 620; 739; 551; 830; 35; 612; 997; 331; 868; 308; 760; 451; 706; 243; 757; 886; 957; 572; 797; 898; 554; 463; 504; 705; 561; 371; 602; 882; 89; 276; 811; 554; 367; 359; 387; 316; 751; 647; 304; 810; 790; 153; 667; 134; 795; 958; 669; 454; 684; 574; 525; 983; 355; 312; 564; 395; 547; 573; 515; 893; 772; 758; 640; 991; 44; 416; 667; 164; 664; 936; 320; 428; 134; 394; 847; 525; 513; 291; 808; 574; 392; 890; 237; 408; 669; 815; 10; 690; 713; 103; 923; 26; 6; 925; 489; 595; 341; 60; 906; 954; 963; 843; 456; 547; 835; 200; 750; 737; 416; 364; 277; 484; 927; 242; 523; 779; 36; 906; 237; 131; 746; 766; 956; 224; 651; 590; 150; 736; 11; 224; 628; 198; 321; 50; 632; 652; 893; 237; 353; 437; 564; 469; 567; 963; 532; 636; 797; 570; 930; 149; 933; 178; 915; 976; 164; 371; 632; 621; 709; 915; 489; 713; 342; 253; 760; 300; 818; 322; 345; 433; 446; 334; 335; 734; 280; 33; 217; 94; 370; 228; 516; 193; 771; 217; 956; 662; 388; 25; 423; 583; 991; 54; 32; 76; 946; 478; 792; 754; 693; 600; 84; 309; 84; 522; 145; 604; 314; 811; 5; 754; 15; 32; 362; 731; 602; 196; 871; 584; 853; 310; 26; 683; 548; 645; 390; 862; 706; 772; 199; 97; 421; 113; 936; 691; 157; 351; 267; 337; 539; 118; 278; 446; 889; 524; 435; 907; 407; 130; 475; 623; 88; 254; 265; 386; 805; 699; 461; 764; 587; 281; 434; 524; 49; 559; 438; 225; 502; 219; 357; 450; 210; 487; 26; 370; 341; 732; 571; 153; 214; 316; 95; 145; 167; 206; 764; 831; 666; 135; 34; 507; 733; 364; 698; 641; 238; 740; 48; 493; 510; 870; 44; 868; 568; 706; 229; 809; 853; 37; 766; 436; 540; 395; 512; 887; 351; 928; 339; 561; 208; 263; 741; 393; 573; 713; 373; 453; 770; 60; 669; 238; 673; 164; 791; 750; 907; 869; 233; 523; 738; 678; 725; 735; 985; 696; 924; 359; 816; 889; 748; 686; 674; 699; 3; 202; 496; 502; 580; 55; 489; 130; 262; 114; 685; 774; 748; 786; 462; 506; 568; 890; 916; 979; 975; 794; 826; 919; 147; 590; 346; 616; 295; 548; 984; 525; 921; 257; 168; 851; 198; 632; 282; 48; 345; 631; 913; 167; 291; 337; 901; 245; 208; 937; 911; 23; 957; 984; 446; 629; 976; 878; 967; 295; 787; 666; 510; 361; 742; 528; 467; 46; 162; 605; 387; 790; 542; 730; 793; 655; 372; 190; 27; 676; 462; 215; 477; 959; 794; 778; 254; 406; 408; 24; 541; 369; 952; 322; 578; 447; 689; 319; 708; 80; 863; 5; 94; 340; 482; 803; 743; 677; 22; 704; 207; 401; 258; 939; 576; 784; 327; 675; 586; 817; 752; 619; 441; 534; 389; 148; 667; 359; 770; 216; 622; 377; 938; 905; 524; 425; 208; 991; 482; 848; 82; 285; 630; 888; 539; 722; 391; 849; 398; 695; 332; 280; 289; 731; 97; 959; 800; 989; 919; 903; 353; 899; 790; 364; 320; 36; 191; 212; 269; 528; 714; 301; 258; 352; 904; 266; 948; 460; 655; 241; 318; 884; 158; 634; 292; 445; 616; 537; 237; 545; 449; 270; 965; 328; 682; 32; 659; 793; 216; 181; 5; 334; 535; 144; 322; 683; 224; 919; 830; 523; 412; 836; 271; 476; 574; 587; 654; 682; 188; 877; 556; 210; 787; 591; 446; 203; 705; 522; 931; 497; 573; 666; 938; 437; 88; 633; 154; 47; 512; 118; 420; 877; 993; 423; 529; 197; 858; 472; 244; 857; 512; 953; 676; 758; 907; 526; 517; 59; 157; 118; 982; 150; 540; 183; 534; 490; 536; 15; 423; 263; 984; 855; 24; 65; 916; 474; 747; 199; 424; 943; 809; 410; 415; 42; 257; 288; 847; 274; 405; 123; 81; 488; 424; 352; 185; 969; 12; 783; 247; 968; 630; 246; 807; 558; 316; 783; 413; 905; 678; 124; 615; 719; 810; 145; 963; 124; 947; 955; 367; 22; 822; 273; 477; 164; 901; 234; 109; 468; 678; 668; 849; 506; 93; 654; 104; 120; 402; 430; 303; 62; 958; 313; 490; 870; 688; 746; 129; 94; 526; 1; 860; 940; 757; 882; 455; 329; 644; 440; 845; 720; 729; 574; 341; 595; 13; 695; 450; 149; 121; 860; 704; 51; 130; 938; 480; 848; 846; 890; 966; 145; 371; 372; 153; 503; 788; 504; 961; 118; 254; 614; 333; 887; 575; 181; 683; 581; 940; 171; 58; 194; 90; 806; 965; 257; 649; 588; 227; 293; 972; 764; 917; 983; 515; 686; 809; 941; 394; 604; 585; 842; 696; 735; 38; 475; 631; 356; 885; 173; 508; 25; 386; 756; 38; 922; 541; 849; 294; 131; 899; 383; 15; 30; 502; 706; 506; 537; 82; 108; 527; 654; 235; 471; 608; 957; 589; 605; 711; 381; 288; 635; 577] 

              
run 
  let a = quicksort random_int_list in 
  nth a 0
